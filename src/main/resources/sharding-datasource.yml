dataSources:
  ds0: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://10.1.12.196:3306/ds0?useUnicode=true&characterEncoding=utf-8&useSSL=false&tinyInt1isBit=false
    username: root
    password: Dianchu123!
    minimumIdle: 1
    maximumPoolSize: 2
  ds1: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://10.1.12.196:3306/ds1?useUnicode=true&characterEncoding=utf-8&useSSL=false&tinyInt1isBit=false
    username: root
    password: Dianchu123!
    minimumIdle: 1
    maximumPoolSize: 2

shardingRule:
  tables:
    t_order:
      actualDataNodes: ds0.t_order${0..1}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: 't_order${order_id % 10 > 5 ? 1 : 0}'
    t_order_item:
      actualDataNodes: ds${0..1}.t_order_item${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: ds${(user_id / 10).toInteger() % 2}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: 't_order_item${order_id % 10 > 5 ? 1 : 0}'
          #algorithmExpression: t_order_item${Math.abs(name.hashCode()) % 2}
    u_account:
      actualDataNodes: ds${0..1}.u_account${0..1}
      tableStrategy:
        complex: #多字段
          shardingColumns: userName,channel
          algorithmClassName: shardingSphere.MyComplexShardingAlgorithm
  defaultDataSourceName: ds0 #没有配置分片规则的表就路由到这个库
  defaultTableStrategy:
    none:
props:
  sql.show: true